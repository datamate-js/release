!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.Datamate=e():t.Datamate=e()}(self,(function(){return(()=>{"use strict";var t={d:(e,n)=>{for(var s in n)t.o(n,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:n[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};t.d(e,{default:()=>w});class n{constructor(){this.filePaths=new Array,this.isAvailable=!1,this.callback=null,this.dataset=new Array}clear(){this.filePaths=new Array,this.dataset=new Array}count(){return this.filePaths.length}showFileSelectionButton(){this.selectionViewElement=window.document.createElement("div"),this.selectionViewElement.innerHTML=this.template(),window.document.body.appendChild(this.selectionViewElement);const t=this.selectionViewElement.querySelector("#file-select");t.addEventListener("change",function(e){const n=t.files;for(let t=0;t<n.length;t++){const e=n[t],s=window.URL.createObjectURL(e);this.addFilePath(s)}this.selectionViewElement.remove(),this.load()}.bind(this)),this.selectionViewElement.querySelector("#closebox").addEventListener("mousedown",function(t){this.selectionViewElement.remove()}.bind(this))}addFilePath(t){this.filePaths.push(t)}loadSync(){for(let t=0;t<this.filePaths.length;t++){const e=this.filePaths[t],n=new XMLHttpRequest;n.open("get",e,!1),n.setRequestHeader("Content-Type","text/plane"),n.send(null);let s=n.responseText;s=s.replace(/\"/g,""),this.dataset.push(s),console.log("DatamateFileLoader: Loaded Sync:",e,"\n",s)}this.isAvailable=!0,console.log("DatamateFileLoader: Load Completed:"),this.callback&&this.callback(),window.loadedDatamate&&window.loadedDatamate()}async load(){for(let t=0;t<this.filePaths.length;t++){const e=this.filePaths[t],n=await fetch(e);let s=await n.text();s=s.replace(/\"/g,""),this.dataset.push(s),console.log("DatamateFileLoader: Loaded:",e,n)}this.isAvailable=!0,console.log("DatamateFileLoader: Load Completed:"),this.callback&&this.callback(),window.loadedDatamate&&window.loadedDatamate()}template(){return'\n\t\t<style>\n\t\t\t@import url(\'https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300;400&display=swap\');\n\t\t\t#filedialog {\n\t\t\t\tmargin: 0px;\n\t\t\t\tpadding: 0px;\n\t\t\t\ttext-decoration: none;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tlist-style: none;\n\t\t\t\tbox-sizing: border-box;\n\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tcolor: white;\n\t\t\t\tfont-size: 13px;\n\t\t\t\tbackground-color: rgba(0, 0, 0, 0.8);\n\n\t\t\t\tposition: fixed;\n\t\t\t\ttop: 0px;\n\t\t\t\tleft: 0px;\n\t\t\t\tfont-family: \'Roboto Condensed\', sans-serif;\n\n\t\t\t\tdisplay: flex;\n\t\t\t    flex-direction: column;\n\t\t\t    justify-content: center;\n\t\t\t    align-items: center;\n\t\t\t}\n\t\t\t#file-select {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t#file-select-button {\n\t\t\t\tcursor: pointer;\n\t\t\t\tdisplay: block;\n\t\t\t\tmargin: auto;\n\t\t\t\tborder: 1px solid white;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\ttext-align: center;\n\t\t\t\tpadding: 20px 60px;\n\t\t\t\tbackground-color: gray;\n\t\t\t\tbox-shadow: 1px 1px 10px 10px rgba(255,255,255,0.2);\n\t\t\t}\n\t\t\t#closebox {\n\t\t\t\tposition: fixed;\n\t\t\t\ttop: 50px;\n\t\t\t\tright: 50px;\n\t\t\t\tpadding: 10px 30px;\n\t\t\t\tcursor: pointer;\n\t\t\t\tborder: 1px solid gray;\n\t\t\t\tborder-radius: 10px;\n\t\t\t}\n\t\t</style>\n\t\t<div id="filedialog">\n\t\t\t<div>\n\t\t\t\t<input id="file-select" type="file" value="SELECT CSV" multiple="multiple" accept=".csv">\n\t\t\t\t<label id="file-select-button" for="file-select">\n\t\t\t\t\t<h1>SELECT CSVs</h1>\n\t\t\t\t</label>\n\t\t\t<div>\n\t\t\t<div id="closebox">CLOSE</div>\n\t\t</div>'}}class s{static uuid4(){let t="";return t+=Math.random().toString(16).substring(2,10)+"-",t+=Math.random().toString(16).substring(2,6)+"-",t+="4"+Math.random().toString(16).substring(2,5)+"-",t+=(3&Math.floor(16*Math.random()))+Math.random().toString(16).substring(2,5)+"-",t+=Math.random().toString(16).substring(2,8)+Math.random().toString(16).substring(2,8),t}static round(t,e=0){return parseFloat(t.toFixed(e))}static clamp(t,e,n){return Math.max(e,Math.min(n,t))}static step(t,e,n){const s=max-min;return t-s*Math.floor(t/s)+min}static loop(t,e,n){const s=n-e;let i=(t-e)/s;return i-=Math.floor(i),i*s+e}static radians(t){return t*(Math.PI/180)}static degrees(t){return t*(180/Math.PI)}static RGB(t){var e=new Object;return e.red=(t>>16&255)/255,e.green=(t>>8&255)/255,e.blue=(t>>0&255)/255,e}static styleFromRGB(t,e=1){return"rgba("+255*t.red+","+255*t.green+","+255*t.blue+","+e+")"}static HSBFromRGB(t){var e=Math.max(Math.max(t.red,t.green),t.blue),n=Math.min(Math.min(t.red,t.green),t.blue),s=new Object;return s.hue=0,s.brightness=e,s.saturation=0==e?0:(e-n)/e,s.saturation>0&&(e==t.red&&(s.hue=60*(t.green-t.blue)/(e-n)+360),e==t.green&&(s.hue=60*(t.blue-t.red)/(e-n)+120),e==t.blue&&(s.hue=60*(t.red-t.green)/(e-n)+240),s.hue<0&&(s.hue+=360),s.hue>360&&(s.hue-=360)),s}static RGBFromHSB(t){var e=new Object;if(0==t.saturation)return e.red=t.brightness,e.green=t.brightness,e.blue=t.brightness,e;var n=Math.floor(t.hue/60)%6,s=t.hue/60-Math.floor(t.hue/60),i=t.brightness*(1-t.saturation),a=t.brightness*(1-t.saturation*s),l=t.brightness*(1-t.saturation*(1-s));switch(n){case 0:e.red=t.brightness,e.green=l,e.blue=i;break;case 1:e.red=a,e.green=t.brightness,e.blue=i;break;case 2:e.red=i,e.green=t.brightness,e.blue=l;break;case 3:e.red=i,e.green=a,e.blue=t.brightness;break;case 4:e.red=l,e.green=i,e.blue=t.brightness;break;case 5:e.red=t.brightness,e.green=i,e.blue=a}return e}}class i{static map(t,e,n,s,i,a){var l=n-e;if(0==l)return s;var o=(t-e)/l;return a&&(o=Math.max(0,Math.min(1,o))),(i-s)*o+s}constructor(t,e,n,s,i){this.sourceMin=t,this.sourceMax=e,this.targetMin=n,this.targetMax=s,this.isClamp=i}map(t){var e=self.sourceMax-self.sourceMin;if(0==e)return self.targetMin;var n=(t-self.sourceMin)/e;return self.isClamp&&(n=Math.max(0,Math.min(1,n))),(self.targetMax-self.targetMin)*n+self.targetMin}}class a{constructor(t,e){this.table=t,this.rows=new Map,this.uuid=s.uuid4(),this.sum=0,this.min=1/0,this.max=-1/0}get isHeader(){return this.table.headerColumnEnabled&&0==this.index}get name(){return this.headerName}get headerName(){if(!this.table.headerRowEnabled)return null;const t=this.rows.get(0);return null!=t?t.value:null}get index(){return this.table.columns.indexOf(this)}get dataIndex(){const t=this.table.columns.indexOf(this);return this.table.headerColumnEnabled?t-1:t}values(t=null){const e=this.table.rowCount(),n=[];for(let s=0;s<e;s++){const e=this.rows.get(s);n.push(null!=e?e.value:t)}return n}intValues(t=NaN){const e=this.table.rowCount(),n=[];for(let s=0;s<e;s++){const e=this.rows.get(s);n.push(null!=e?e.intValue():t)}return n}floatValues(t=NaN){const e=this.table.rowCount(),n=[];for(let s=0;s<e;s++){const e=this.rows.get(s);n.push(null!=e?e.floatValue():t)}return n}stringValues(t=""){const e=this.table.rowCount(),n=[];for(let s=0;s<e;s++){const e=this.rows.get(s);n.push(null!=e?e.stringValues():t)}return n}value(t,e=0,n=0){const s="string"==typeof t?this.table.indexOfDataRowName(t):t;let a=this.valueAtDataIndex(s);return e!=n&&(a=i.map(a,this.min,this.max,e,n)),a}rate(t,e=0,n=0){let s=this.value(t);return s/=this.sum,e!=n&&(s=i.map(s,0,1,e,n)),s}valueAtIndex(t){const e=this.rows.get(t);return null!=e?e.value:_nullReplacement}valueAtDataIndex(t){const e=this.table.headerRowEnabled?t+1:t;return this.valueAtIndex(e)}dataAtIndex(t){return this.rows.get(t)}dataAtDataIndex(t){const e=this.table.headerRowEnabled?t+1:t;return this.dataAtIndex(e)}setData(t){const e=t.row.index;this.rows.set(e,t)}update(){this.sum=0,this.average=0,this.min=1/0,this.max=-1/0;const t=this.rows.values();for(let e of t){const t=e.floatValue();isNaN(t)||(this.sum+=t,this.average=this.sum/this.rows.size,this.min=Math.min(t,this.min),this.max=Math.max(t,this.max))}}}class l{constructor(t,e){this.table=t,this.columns=new Map,this.uuid=s.uuid4(),this.sum=0,this.min=1/0,this.max=-1/0}get isHeader(){return this.table.headerRowEnabled&&0==this.index}get name(){return this.headerName}get headerName(){if(!this.table.headerColumnEnabled)return null;const t=this.columns.get(0);return null!=t?t.value:null}get index(){return this.table.rows.indexOf(this)}get dataIndex(){const t=this.table.rows.indexOf(this);return this.table.headerColumnEnabled?t-1:t}values(t=null){const e=this.table.columnCount(),n=[];for(let s=0;s<e;s++){const e=this.columns.get(s);n.push(null!=e?e.value:t)}return n}intValues(t=NaN){const e=this.table.columnCount(),n=[];for(let s=0;s<e;s++){const e=this.columns.get(s);n.push(null!=e?e.intValue():t)}return n}floatValues(t=NaN){const e=this.table.columnCount(),n=[];for(let s=0;s<e;s++){const e=this.columns.get(s);n.push(null!=e?e.floatValue():t)}return n}stringValues(t=""){const e=this.table.columnCount(),n=[];for(let s=0;s<e;s++){const e=this.columns.get(s);n.push(null!=e?e.stringValues():t)}return n}value(t,e=0,n=0){const s="string"==typeof t?this.table.indexOfDataColumnName(t):t;let a=this.valueAtDataIndex(s);return e!=n&&(a=i.map(a,this.min,this.max,e,n)),a}rate(t,e=0,n=0){let s=this.value(t);return s/=this.sum,e!=n&&(s=i.map(s,0,1,e,n)),s}valueAtIndex(t){const e=this.columns.get(t);return null!=e?e.value:_nullReplacement}valueAtDataIndex(t){const e=this.table.headerColumnEnabled?t+1:t;return this.valueAtIndex(e)}dataAtIndex(t){return this.columns.get(t)}dataAtDataIndex(t){const e=this.table.headerColumnEnabled?t+1:t;return this.dataAtIndex(e)}setData(t){const e=t.column.index;this.columns.set(e,t)}update(){this.sum=0,this.average=0,this.min=1/0,this.max=-1/0;const t=this.columns.values();for(let e of t){const t=e.floatValue();isNaN(t)||(this.sum+=t,this.average=this.sum/this.columns.size,this.min=Math.min(t,this.min),this.max=Math.max(t,this.max))}}}class o{constructor(t){this.area=null,this.value=t,this.table=null,this.column=null,this.row=null}bind(t,e,n){this.table=t,this.column=e,this.row=n,this.column.setData(this),this.row.setData(this),this.column.update(),this.row.update()}get columnIndex(){return this.column.index}get rowIndex(){return this.row.index}get columnDataIndex(){return this.column.dataIndex}get rowDataIndex(){return this.row.dataIndex}get columnMin(){return this.column.min}get columnMax(){return this.column.max}get rowMin(){return this.row.min}get rowMax(){return this.row.max}isNumber(){return!isNaN(this.value)}intValue(){return null!==this.value?Math.floor(Number(this.value)):0}floatValue(){return null!==this.value?Number(this.value):0}stringValue(){return null!==this.value?this.value.toString():""}}class h{constructor(t){this.id=t,this.startValue=0,this.startTime=0,this.rate=0,this.duration=1,this.min=0,this.max=1,this.loopEnabled=!1,this.isPlaying=!1}forward(t=1){this.move(this.currentValue+t)}backward(t=1){this.move(this.currentValue-t)}move(t){this.startValue=this.loopEnabled?s.loop(t,this.min,this.max):s.clamp(t,this.min,this.max),this.isPlaying&&this.start(this.rate)}pause(){this.startValue=this.currentValue,this.isPlaying=!1}stop(){this.rate=0,this.isPlaying=!1}start(t=1){if(this.rate=Math.max(0,t),0==this.rate)return this.stop();this.startTime=(new Date).getTime()/1e3,this.isPlaying=!0}restart(){this.start(this.rate)}setRate(t=1){this.rate=Math.max(0,t),this.rate>0?this.start(this.rate):this.stop()}setRange(t,e){this.min=t,this.max=e,this.isPlaying?this.start(this.rate):this.stop()}progress(){return this.isPlaying&&0!=this.rate?((new Date).getTime()/1e3-this.startTime)/(1/this.rate):0}value(t=0,e=!1){let n=this.currentValue+t;return n=this.loopEnabled?s.loop(n,this.min,this.max):s.clamp(n,this.min,this.max),e?n:Math.floor(n)}get currentValue(){const t=this.progress()+this.startValue;let e=this.loopEnabled?s.loop(t,this.min,this.max):s.clamp(t,this.min,this.max);return this.loopEnabled||e!=this.max||(this.startValue=e,this.isPlaying=!1),e}get currentIndex(){return Math.floor(this.currentValue)}}class r{constructor(t){this.table=t,this.transitionX=new h("x"),this.transitionY=new h("y")}update(){this.transitionX.setRange(0,this.table.columnDataCount()),this.transitionY.setRange(0,this.table.rowDataCount())}get x(){return this.transitionX.currentValue}get y(){return this.transitionY.currentValue}get isPlaying(){return this.transitionX.isPlaying||this.transitionY.isPlaying}columnIndex(t=0,e=!1){return this.transitionX.value(t,e)}rowIndex(t=0,e=!1){return this.transitionY.value(t,e)}toggle(){this.isPlaying?this.pause():this.start()}pause(){this.transitionX.pause(),this.transitionY.pause()}stop(){this.transitionX.stop(),this.transitionY.stop()}start(t=1,e=0){this.transitionX.start(t),this.transitionY.start(e)}origin(){this.transitionX.move(0),this.transitionY.move(0)}move(t,e){this.transitionX.move(t),this.transitionY.move(e)}right(t=1){this.transitionX.forward(t)}left(t=1){this.transitionX.backward(t)}up(t=1){this.transitionY.backward(t)}down(t=1){this.transitionY.forward(t)}}class d{static COLUMN="COLUMN";static ROW="ROW";constructor(t=!0,e=!0){this.columns=new Array,this.rows=new Array,this.datatable=new Map,this.headerRowEnabled=t,this.headerColumnEnabled=e,this.dataset=new Map,this.isAvailable=!1,this.min=1/0,this.max=-1/0,this.sum=0,this.average=0,this.cursor=new r(this)}clear(){this.columns=new Array,this.rows=new Array,this.dataset=new Map,this.isAvailable=!1,this.min=1/0,this.max=-1/0,this.sum=0,this.average=0}update(){this.min=1/0,this.max=-1/0,this.sum=0;for(let t=0;t<this.columns.length;t++){const e=this.columns[t];e.update(),this.min=Math.min(this.min,e.min),this.max=Math.max(this.max,e.max),this.sum+=e.sum}this.columns.length>0&&(this.average=this.sum/this.columns.length),this.cursor.update(),this.isAvailable=!0}parseCSV(t){const e=(t=(t=t.replace(/\r\n/g,"\n")).replace(/\r/g,"\n")).split("\n");this.clear();for(let t=0;t<e.length;t++){const n=e[t].split(",");n.length>1&&this.addRowValues(n)}this.update()}copy(t){const e=t.rowCount();for(let n=0;n<e;n++){const e=t.valuesAtRowIndex(n);this.addRowValues(e)}this.update()}transpose(){const t=new d;t.setHeaderEnables(this.headerRowEnabled,this.headerColumnEnabled),t.copy(this),this.clear();const e=t.rowCount();for(let n=0;n<e;n++){const e=t.valuesAtRowIndex(n);this.addColumnValues(e)}this.update()}merge(t){if(0==this.columns.length)return this.copy(t);const e=t.columnCount(),n=t.rowCount(),s=this.columnCount(),i=this.rowCount();if(!this.headerRowEnabled){const t=this.headerColumnEnabled?e-1:e;for(let e=0;e<t;e++)this.addColumn()}if(!this.headerColumnEnabled){const t=this.headerRowEnabled?n-1:n;for(let e=0;e<t;e++)this.addRow()}if(this.headerRowEnabled)for(let n=0;n<e;n++){const e=t.columnAtIndex(n),s=this.rowAtIndex(0);if(!this.hasColumnName(e.headerName)){const t=this.addColumn(),n=e.headerName;new o(n).bind(this,t,s)}}if(this.headerColumnEnabled)for(let e=0;e<n;e++){const n=t.rowAtIndex(e),s=this.columnAtIndex(0);if(!this.hasRowName(n.headerName)){const t=this.addRow(),e=n.headerName;new o(e).bind(this,s,t)}}let a=s;for(let s=0;s<e;s++){if(this.headerColumnEnabled&&0==s)continue;const e=t.columnAtIndex(s),l=this.headerRowEnabled?this.columnByName(e.headerName):this.columnAtIndex(a);let h=i;for(let s=0;s<n;s++){if(this.headerRowEnabled&&0==s)continue;const n=t.rowAtIndex(s),i=this.headerColumnEnabled?this.rowByName(n.headerName):this.rowAtIndex(h),a=e.valueAtIndex(s);new o(a).bind(this,l,i),console.log("       Row:",i.headerName,l.headerName,i.index,l.index),h++}a++}this.update()}setHeaderEnables(t=!0,e=!0){this.headerRowEnabled=t,this.headerColumnEnabled=e}play(t=1,e=0){this.cursor.start(t,e)}stop(){this.cursor.stop()}origin(){this.cursor.origin()}move(t,e){this.cursor.move(t,e)}right(t=1){this.cursor.right(t)}left(t=1){this.cursor.left(t)}up(t=1){this.cursor.up(t)}down(t=1){this.cursor.down(t)}focusX(t=0,e=!1){return s.round(this.cursor.columnIndex(t,e),4)}focusY(t=0,e=!1){return s.round(this.cursor.rowIndex(t,e),4)}dataAtIndexes(t,e){const n=this.rowAtIndex(e);return null!=n?n.dataAtIndex(t):null}dataAtDataIndexes(t,e){const n=this.rowAtDataIndex(e);return null!=n?n.dataAtDataIndex(t):null}valueAtIndexes(t,e){return this.dataAtIndexes(t,e).value}valueAtDataIndexes(t,e){return this.dataAtDataIndexes(t,e).value}intValueAtIndexes(t,e){return this.dataAtIndexes(t,e).intValue()}intValueAtDataIndexes(t,e){return this.dataAtDataIndexes(t,e).intValue()}floatValueAtIndexes(t,e){return this.dataAtIndexes(t,e).floatValue()}floatValueAtDataIndexes(t,e){return this.dataAtDataIndexes(t,e).floatValue()}lerpValueAtIndexees(t,e){const n=this.columnCount()-1,i=this.rowCount()-1,a=s.clamp(t,0,n),l=s.clamp(e,0,i),o=s.clamp(Math.floor(a),0,n),h=s.clamp(Math.ceil(a),0,n),r=s.clamp(Math.floor(l),0,i),d=s.clamp(Math.ceil(l),0,i),u=this.dataAtIndexes(o,r),c=this.dataAtIndexes(h,d);if(u.value==c.value||isNaN(u.value)||isNaN(c.value))return u.value;const m=h-o,p=d-r,g=Math.sqrt(m*m+p*p),b=a-o,w=l-r,x=0!=g?Math.sqrt(b*b+w*w)/g:0,f=u.floatValue();return f+(c.floatValue()-f)*x}lerpValueAtDataIndexes(t,e){const n=this.headerColumnEnabled?t+1:t,s=this.headerRowEnabled?e+1:e;return this.lerpValueAtIndexees(n,s)}valuesAtColumnIndex(t){const e=this.columnAtIndex(t);return null==e?null:e.values()}valuesAtColumnDataIndex(t){const e=this.headerColumnEnabled?t+1:t,n=this.columnAtIndex(e);if(null==n)return null;const s=n.values();return this.headerRowEnabled&&s.shift(),s}valuesAtRowIndex(t){const e=this.rowAtIndex(t);return null==e?null:e?e.values():null}valuesAtRowDataIndex(t){const e=this.headerRowEnabled?t+1:t,n=this.rowAtIndex(e);if(null==n)return null;const s=n.values();return this.headerColumnEnabled&&s.shift(),s}columnHeaderNames(){return this.headerRowEnabled?this.valuesAtRowIndex(0):null}columnDataHeaderNames(){if(!this.headerRowEnabled)return null;const t=this.valuesAtRowIndex(0);return this.headerColumnEnabled&&t.shift(),t}columnHeaderNameAtIndex(t){const e=this.columnHeaderNames();return null==e?null:t<e.length?e[t]:null}columnDataHeaderNameAtIndex(t){const e=this.columnDataHeaderNames();return null==e?null:t<e.length?e[t]:null}rowHeaderNames(){return this.headerColumnEnabled?this.valuesAtColumnIndex(0):null}rowDataHeaderNames(){if(!this.headerColumnEnabled)return null;const t=this.valuesAtColumnIndex(0);return this.headerRowEnabled&&t.shift(),t}rowHeaderNameAtIndex(t){const e=this.rowHeaderNames();return null==e?null:t<e.length?e[t]:null}rowDataHeaderNameAtIndex(t){const e=this.rowDataHeaderNames();return null==e?null:t<e.length?e[t]:null}hasColumnName(t){return this.indexOfColumnName(t)>=0}hasRowName(t){return this.indexOfRowName(t)>=0}columnByName(t){const e=this.columnHeaderNames();if(null==e)return null;const n=e.indexOf(t);return n<0?null:this.columnAtIndex(n)}rowByName(t){const e=this.rowHeaderNames();if(null==e)return null;const n=e.indexOf(t);return n<0?null:this.rowAtIndex(n)}indexOfColumnName(t){const e=this.columnHeaderNames();return null==e?-1:e.indexOf(t)}indexOfDataColumnName(t){let e=this.indexOfColumnName(t);return e>=0&&this.headerColumnEnabled&&(e-=1),e}indexOfRowName(t){const e=this.rowHeaderNames();return null==e?-1:e.indexOf(t)}indexOfDataRowName(t){let e=this.indexOfRowName(t);return e>=0&&this.headerRowEnabled&&(e-=1),e}columnAtIndex(t){return t<this.columns.length?this.columns[t]:null}columnAtDataIndex(t){const e=this.headerColumnEnabled?t+1:t;return this.columnAtIndex(e)}rowAtIndex(t){return t<this.rows.length?this.rows[t]:null}rowAtDataIndex(t){const e=this.headerRowEnabled?t+1:t;return this.rowAtIndex(e)}columnCount(){return this.columns.length}columnDataCount(){return this.headerColumnEnabled?Math.max(0,this.columns.length-1):this.columns.length}rowCount(){return this.rows.length}rowDataCount(){return this.headerRowEnabled?Math.max(0,this.rows.length-1):this.rows.length}columnIndexes(){return Array.from(this.columns.keys())}columnDataIndexes(){const t=this.columnIndexes();return this.headerColumnEnabled&&t.pop(),t}rowIndexes(){return Array.from(this.rows.keys())}rowDataIndexes(){const t=this.rowIndexes();return this.headerRowEnabled&&t.pop(),t}row(t){const e="string"==typeof t?this.indexOfRowName(t):t;return this.rowAtIndex(e)}column(t){const e="string"==typeof t?this.indexOfColumnName(t):t;return this.columnAtIndex(e)}setHeaderNames(t){const e=0==this.rows.length?this.addRow():this.insertRowAtIndex(0);for(let n=0;n<t.length;n++){const s=n<this.columns.length?this.columns[n]:this.addColumn(),i=t[n];new o(i).bind(this,s,e)}this.update()}addColumn(t=null){const e=this.columns.length,n=new a(this,e);if(this.columns.push(n),null!==t){const e=this.rows.length>0?this.rowAtIndex(0):this.addRow();new o(t).bind(this,n,e)}return n}addRow(t=null){const e=this.rows.length,n=new l(this,e);if(this.rows.push(n),null!==t){const e=this.columns.length>0?this.columnAtIndex(0):this.addColumn();new o(t).bind(this,e,n)}return n}insertColumnAtIndex(t){if(t>=this.columns.length)return;const e=new a(this,t);return this.columns.splice(t,0,e),e}insertColumnAtDataIndex(t){const e=this.headerColumnEnabled?t+1:t;return this.insertColumn(e)}insertRowAtIndex(t){if(t>=this.rows.length)return;const e=new l(this,t);return this.rows.splice(t,0,e),e}insertRowAtDataIndex(t){const e=this.headerRowEnabled?t+1:t;return this.insertRow(e)}swapColumns(t,e){if(t>=this.rows.length||e>=this.rows.length)return;const n=this.columns[t],s=this.columns[e];n.index=e,s.index=t,this.columns[t]=s,this.columns[e]=n}swapDataColumns(t,e){const n=this.headerColumnEnabled?t+1:t,s=this.headerColumnEnabled?e+1:e;this.swapColumns(n,s)}swapRows(t,e){if(t>=this.rows.length||e>=this.rows.length)return;const n=this.rows[t],s=this.rows[e];n.index=e,s.index=t,this.rows[t]=s,this.rows[e]=n}swapDataRows(t,e){const n=this.headerRowEnabled?t+1:t,s=this.headerRowEnabled?e+1:e;this.swapRows(n,s)}setValueWithNames(t,e=null,n=null){let s=e?this.columnByName(e):null,i=n?this.rowByName(n):null;null==s&&(s=this.addColumn()),null==i&&(i=this.addRow()),new o(t).bind(this,s,i)}setValueAtIndexes(t,e=1/0,n=1/0){let s=e>=0&&e<this.columns.length?this.columnAtIndex(e):this.addColumn(),i=n>=0&&n<this.rows.length?this.rowAtIndex(n):this.addRow();new o(t).bind(this,s,i)}setColumnValuesAtIndex(t,e){if(e>=this.columns.length)return;const n=this.columns[e];for(let e=0;e<t.length;e++){const s=e<this.rows.length?this.rows[e]:this.addRow(),i=t[e];new o(i).bind(this,n,s)}this.update()}setRowValuesAtIndex(t,e){if(e>=this.rows.length)return;const n=this.rows[e];for(let e=0;e<t.length;e++){const s=e<this.columns.length?this.columns[e]:this.addColumn(),i=t[e];new o(i).bind(this,s,n)}this.update()}setColumnValuesAtDataIndex(t,e){const n=this.headerColumnEnabled?e+1:e;this.setColumnValuesAtIndex(t,n)}setRowValuesAtDataIndex(t,e){const n=this.headerColumnEnabled?e+1:e;this.setRowValuesAtIndex(t,n)}setColumnValuesAtName(t,e){const n=this.indexOfColumnName(e);n<0||this.setColumnValuesAtIndex(t,n)}setRowValuesAtName(t,e){const n=this.indexOfRowName(e);n<0||this.setRowValuesAtIndex(t,n)}addColumnValues(t){const e=this.addColumn();this.setColumnValuesAtIndex(t,e.index)}addRowValues(t){const e=this.addRow();this.setRowValuesAtIndex(t,e.index)}formatTable(){const t=this.columnHeaderNames(),e=this.rows.concat();this.headerRowEnabled&&e.shift();const n=new Array;for(let t=0;t<e.length;t++){const s=e[t].values("-");n.push(s)}const s=new Map;return s.set("headers",t),s.set("rows",n),s}}class u{constructor(t=0,e=0,n=1,s=1,i=1,a=1,l=0,o=0,h=0){this.reset(t,e,n,s,i,a,l,o,h)}reset(t=0,e=0,n=1,s=1,a=1,l=1,o=0,h=0,r=0){this.index=r,this.name="",this.areaX=t,this.areaY=e,this.areaWidth=n,this.areaHeight=s,this.xBlocks=Math.max(1,a),this.yBlocks=Math.max(1,l),this.xBlockIndex=o,this.yBlockIndex=h,this.width=this.areaWidth/this.xBlocks,this.height=this.areaHeight/this.yBlocks,this.x=i.map(this.xBlockIndex,0,this.xBlocks,this.areaX,this.areaX+this.areaWidth),this.y=i.map(this.yBlockIndex,0,this.yBlocks,this.areaY,this.areaY+this.areaHeight),this.left=i.map(0,0,1,this.x,this.x+this.width),this.centerX=i.map(.5,0,1,this.x,this.x+this.width),this.right=i.map(1,0,1,this.x,this.x+this.width),this.top=i.map(0,0,1,this.y,this.y+this.height),this.centerY=i.map(.5,0,1,this.y,this.y+this.height),this.bottom=i.map(1,0,1,this.y,this.y+this.height)}block(t,e,n=0){return new u(this.areaX,this.areaY,this.areaWidth,this.areaHeight,this.xBlocks,this.yBlocks,t,e,n)}}class c{constructor(t=1e3){this.scale=1,this.frameWidth=t,this.plotWidth=this.frameWidth*this.scale,this.plotCenter=0,this.setScale(this.scale)}resize(t){this.frameWidth=t,this.plotWidth=this.frameWidth*this.scale}setScale(t){this.scale;const e=this.plotCenter/this.scale;this.scale=t,this.plotWidth=this.frameWidth*this.scale,this.plotCenter=e*this.scale,this.movableRange=.5*(this.plotWidth-this.frameWidth),this.plotCenter=Math.max(-this.movableRange,Math.min(this.movableRange,this.plotCenter))}moveBy(t){this.plotCenter+=t,this.movableRange=.5*(this.plotWidth-this.frameWidth),this.plotCenter=Math.max(-this.movableRange,Math.min(this.movableRange,this.plotCenter))}moveToIndex(t,e){this.plotCenter=0==this.movableRange?0:-1*i.map(t,0,e,-.5*this.plotWidth,.5*this.plotWidth),this.plotCenter=Math.max(-this.movableRange,Math.min(this.movableRange,this.plotCenter))}indexFromFrameX(t,e){const n=this.plotCenter-.5*this.plotWidth,s=this.plotCenter+.5*this.plotWidth,a=t-.5*this.frameWidth;return Math.floor(i.map(a,n,s,0,e))}}class m{static clamp(t,e,n){return Math.max(e,Math.min(t,n))}static easeFilter(t,e,n,s){let i=(t-e)/(n-e);return i=Math.min(1,Math.max(0,i)),i=i<.5?.5*Math.pow(2*i,s):1-.5*Math.pow(2*(1-i),s),(n-e)*i+e}static easeInFilter(t,e,n,s){let i=(t-e)/(n-e);return i=Math.min(1,Math.max(0,i)),i=Math.pow(i,s),(n-e)*i+e}static easeOutFilter(t,e,n,s){let i=(t-e)/(n-e);return i=Math.min(1,Math.max(0,i)),i=1-Math.pow(1-i,s),(n-e)*i+e}static easeInOutFilter(t,e,n,s,i){let a=(t-e)/(n-e),l=1-i,o=i>0?1/i:0,h=l>0?1/l:0;return a=Math.min(1,Math.max(0,a)),a=a<i?Math.pow(a*o,s)*i:1-Math.pow((1-a)*h,s)*l,(n-e)*a+e}static easeOutInFilter(t,e,n,s,i){let a=(t-e)/(n-e),l=1-i,o=i>0?1/i:0,h=l>0?1/l:0;return a=Math.min(1,Math.max(0,a)),a=a<i?i-Math.pow((i-a)*o,s)*i:i+Math.pow((a-i)*h,s)*l,(n-e)*a+e}}class p{static CHART_TYPE_BAR="CHART_TYPE_BAR";static CHART_TYPE_LINE="CHART_TYPE_LINE";static CHART_TYPE_PIE="CHART_TYPE_PIE";constructor(){this.context=null,this.element=null,this.canvas=null,this.type=p.CHART_TYPE_BAR,this.table=null,this.min=0,this.max=200,this.width=1e3,this.height=400,this.plotter=null}clear(){this.table=null}draw(t,e=0,n=0){if(null!=t&&null!=this.context)switch(this.type){case p.CHART_TYPE_BAR:this.drawBarChart(t,e,n);break;case p.CHART_TYPE_LINE:this.drawLineChart(t,e);break;case p.CHART_TYPE_PIE:this.drawPieChart(t,e)}}resize(t,e){this.width=t,this.height=e,this.canvas.width=t,this.canvas.height=e}drawLineChart(t,e=0){null==this.plotter&&(this.plotter=new c),this.plotter.resize(this.width);const n=t.columnCount(),s=t.rowCount();if(0==n||0==s)return;const a=this.min,l=this.max;this.context.clearRect(0,0,this.width,this.height),this.context.strokeWeight=1;const o=t.columnHeaderNames(),h=t.rowHeaderNames();for(let e=0;e<o.length;e++){o[e],this.context.beginPath(),this.context.strokeStyle="white",this.context.lineWidth=e==this.highlightColIndex?"2":"1";let n=-1,r=-1,d=!0;for(let o=0;o<this.plotter.frameWidth;o++){const u=this.plotter.indexFromFrameX(o,s);if(u>=s||u<0||u==n)continue;t.rowAtIndex(u),this.highlightRowIndex>n&&this.highlightRowIndex<=u&&(r=o),n=u,h[u];const c=t.dataAtIndexes(e,o);if(!c){d=!0;continue}const m=c.floatValue(),p=i.map(o/this.plotter.frameWidth,0,1,0,this.width),g=i.map(m,a,l,this.height,0);0==o||d?this.context.moveTo(p,g):this.context.lineTo(p,g),d=!1}this.context.stroke(),r>=0&&(this.context.beginPath(),this.context.strokeStyle="orange",this.context.lineWidth="1",this.context.moveTo(r,0),this.context.lineTo(r,400),this.context.stroke())}}drawPieChart(t,e=0){t.update();const n=t.columnDataCount(),i=t.rowDataCount();this.context.clearRect(0,0,this.width,this.height),this.context.strokeWeight=1;const a=t.columnDataHeaderNames(),l=t.columnDataIndexes(),o=m.clamp(e,0,i),h=t.rowAtDataIndex(o),r=(h.min,h.max,h.sum),d=(this.height,.5*this.width),u=.5*this.height,c=.45*Math.min(this.width,this.height);let p=[];for(let t=0;t<n;t++){const e=a?a[t]:l[t],n=h.dataAtDataIndex(t);if(console.log("DatamateChart: Pie Chart: ",t,e,n),null==n||!n.isNumber())continue;const s=n.floatValue();p.push(s)}let g=0,b=0;const w=p.length;for(let t=0;t<w;t++){const e=p[t],n=1*e/r,i=1*t/w*360,a=360*g-90,l=360*(g+n)-90,o=s.radians(a),h=s.radians(l),m=s.RGBFromHSB({hue:i,saturation:1,brightness:1}),x=s.styleFromRGB(m);this.context.strokeStyle="black",this.context.lineWidth=2,this.context.fillStyle=x,this.context.beginPath(),this.context.moveTo(d,u),this.context.arc(d,u,c,o,h),this.context.lineTo(d,u),this.context.stroke(),this.context.fill(),this.context.closePath(),g+=n,b+=e}}drawBarChart(t,e=0,n=-1){const s=t.columnDataCount(),a=t.rowDataCount();if(0==s||0==a)return;this.context.clearRect(0,0,this.width,this.height),this.context.strokeWeight=1;const l=t.columnDataHeaderNames(),o=t.columnDataIndexes(),h=m.clamp(e,0,a-1),r=t.rowAtDataIndex(h),d=t.columnHeaderEnabled?n-1:n,u=this.height-60,c=t.min,p=t.max,g=r.sum;let b=0;for(let e=0;e<s;e++){const n=l?l[e]:o[e],a=r.dataAtDataIndex(e),h=a?a.stringValue():"n/a",m=a?a.floatValue():"n/a",w=!isNaN(m),x=w&&0!=g?m/g:0,f=i.map(b,-1,s,30,this.width-30),v=u,y=i.map(m,c,p,u,0),C=e!=d?"white":"orange";this.context.strokeStyle=C,this.context.fillStyle=C,this.context.lineWidth=2,this.context.beginPath(),this.context.moveTo(f,v),this.context.lineTo(f,y),this.context.stroke();let I="";t.headerColumnEnabled&&(I+=r.name,I+="\n"),t.headerRowEnabled&&(I+=n,I+="\n"),I+=w?m:h,I+="\n",I+=w?i.map(x,0,1,0,100).toFixed(4)+"%":"-",this.context.textAlign="center",this.drawMultilineText(I,f,this.height-60,10),b++}}drawMultilineText(t,e,n,s,i="serif",a=1.5){this.context.font=s+" "+i;const l=t.split("\n");for(let t=0;t<l.length;t++){const i=l[t],o=n+(t+1)*s*a;this.context.fillText(i,e,o)}}}class g{static version="1.0.0";constructor(t="DatamatePanel",e=!0){this.name=t,this.isLoaded=!1,this.isVisible=!1,this.isDataAvailable=!1,this.table=null,this.min=0,this.max=100,this.scalableMin=1,this.scalableMax=10,this.graphScale=1,this.pixelOffset=0,this.graphColors=["rgba(255,255,255,0.8)"],this.highlightColIndex=-1,this.highlightRowIndex=0,this.highlightTR=null,this.styles={color:"white",background:"rgba(20, 20, 2\t0, 0.75)"},this.barColor="white",this.highlightColor="orange",this.fileSelectionCallback=null,this.transposeSelectionCallback=null,this.chart=new p,this.plotter=new c,this.load()}load(){if(this.isLoaded)return;this.shouldUpdate=!0,this.interval&&clearInterval(this.interval),this.interval=setInterval(this.update.bind(this),1e3/30),this.panelContainerElement=window.document.createElement("div"),this.panelContainerElement.innerHTML=this.template(),window.document.body.appendChild(this.panelContainerElement),this.panelElement=this.panelContainerElement.querySelector("#panel"),this.panelElement.style.top="-100%",this.panelElement.addEventListener("transitionend",function(t){"-100%"==this.panelElement.style.top&&(this.panelElement.style.visibility="hidden")}.bind(this));const t=this.panelElement.querySelector("#file-select");t.addEventListener("change",function(e){const n=t.files,s=new Array;for(let t=0;t<n.length;t++){const e=n[t],i=window.URL.createObjectURL(e);s.push(i)}this.fileSelectionCallback&&this.fileSelectionCallback(s)}.bind(this)),this.panelElement.querySelector("#transposebutton").addEventListener("mousedown",function(t){this.transposeSelectionCallback&&this.transposeSelectionCallback()}.bind(this)),this.panelElement.querySelector("#clearbutton").addEventListener("mousedown",function(t){this.clearAll()}.bind(this)),this.panelElement.querySelector("#closebox").addEventListener("mousedown",function(t){this.hide()}.bind(this));let e=null;e=this.panelElement.querySelector("#min input"),e&&(e.value=this.min,e.addEventListener("change",function(t){this.min=parseFloat(t.currentTarget.value),this.shouldUpdate=!0}.bind(this))),e=this.panelElement.querySelector("#max input"),e&&(e.value=this.max,e.addEventListener("change",function(t){this.max=parseFloat(t.currentTarget.value),this.shouldUpdate=!0}.bind(this))),e&&(e=this.panelElement.querySelector("#scale input"),e.min=this.scalableMin,e.max=this.scalableMax,e.addEventListener("input",function(t){this.panelElement.querySelector("#scale .status").innerHTML=t.currentTarget.value,this.plotter.setScale(t.currentTarget.value),this.shouldUpdate=!0}.bind(this))),e=this.panelElement.querySelector("#graph");const n=e.getBoundingClientRect();if(n.height!=window.innerHeight/2&&(n.height=window.innerHeight/2),e=this.panelElement.querySelector("#graph canvas"),e){const t=window.devicePixelRatio;this.context=e.getContext("2d"),this.context.scale(t,t),this.chart.context=this.context,this.chart.canvas=e,this.chart.canvas.width=n.width*t,this.chart.canvas.height=n.height*t,this.chart.resize(n.width,n.height),console.log("DatamatePanel: window resize:",window.innerHeight/2,n.height),e.addEventListener("mousedown",function(t){if(this.isDataAvailable){if(t.currentTarget.isMouseDown=!0,t.currentTarget.offsetX=t.offsetX,t.currentTarget.isMouseDown&&!t.shiftKey){const e=this.table.columnDataCount(),n=t.currentTarget.getBoundingClientRect();this.highlightColIndex=parseInt(i.map(t.offsetX,30,n.width-30,0,e)),this.highlightColumn(!0)}if(t.currentTarget.isMouseDown&&t.shiftKey){const e=this.table.rowDataCount(),n=t.currentTarget.getBoundingClientRect();this.highlightRowIndex=parseInt(i.map(t.offsetY,10,n.height-10,0,e)),this.highlightRow(!0),console.log("DatamatePanel:",this.highlightRowIndex,t.offsetY,e)}}}.bind(this)),e.addEventListener("mouseup",function(t){t.currentTarget.isMouseDown=!1}.bind(this)),e.addEventListener("mouseout",function(t){t.currentTarget.isMouseDown=!1}.bind(this)),e.addEventListener("mousemove",function(t){if(this.isDataAvailable){if(t.currentTarget.isMouseDown&&!t.shiftKey){const e=this.table.columnDataCount(),n=t.currentTarget.getBoundingClientRect();this.highlightColIndex=parseInt(i.map(t.offsetX,30,n.width-30,0,e)),this.highlightColumn(!0)}if(t.currentTarget.isMouseDown&&t.shiftKey){const e=this.table.rowDataCount(),n=t.currentTarget.getBoundingClientRect();this.highlightRowIndex=parseInt(i.map(t.offsetY,10,n.height-10,0,e)),this.highlightRow(!0),console.log("DatamatePanel:",this.highlightRowIndex,t.offsetY,e)}}}.bind(this))}window.addEventListener("resize",this.windowResizeHandler.bind(this)),this.isLoaded=!0,this.updatePanelTooltips(),this.update(),this.panelElement.style.visibility="hidden"}unload(){this.isLoaded&&(this.interval&&clearInterval(this.interval),this.interval=null,this.panelContainerElement&&this.panelContainerElement.remove(),this.panelContainerElement=null,this.isLoaded=!1)}windowResizeHandler(t){if(!this.isLoaded)return;const e=this.panelElement.querySelector("#graph").getBoundingClientRect(),n=window.devicePixelRatio;this.context.scale(n,n),this.chart.resize(e.width,e.height),console.log("DatamatePanel: window resize:",window.innerHeight/2,e.height),this.updateGraph()}show(){this.isLoadeded||this.load(),this.isVisible=!0,this.panelElement.style.visibility="",this.panelElement.style.transition="top 0.5s ease-in-out",setTimeout(function(t){this.panelElement.style.top="0px"}.bind(this),1),console.log("DatamatePanel: show")}hide(){this.isLoaded&&(this.isVisible=!1,this.panelElement.style.top="-100%",console.log("DatamatePanel: hide"))}applyCusromStyles(){const t=this.panelElement.querySelector("#custom_style");console.log(t,this.styles);let e="";this.styles.color&&(e+=`color: ${this.styles.color};`),this.styles.color&&(e+=`border-color: ${this.styles.color};`),this.styles.background&&(e+=`background-color: ${this.styles.background};`);let n=`\n\t\t#panel, #controls, #contents, #table thead th, #buttons > div, #buttons > label  {\n\t\t\t${e}\n\t\t}`;t.innerHTML=n}applyHeaderStyles(){const t=this.panelElement.querySelector("#header_style");console.log(t,this.graphColors);const e=this.table.columnCount();let n="";for(let t=0;t<e;t++){const e=t+1,s=t%this.graphColors.length;n+=`#table thead th:nth-of-type(${e}) {\n\t\t\t\tcolor: ${this.graphColors[s]};\n\t\t\t}`}t.innerHTML=n,console.log("DatamatePanel: header styles: ",n,t)}rainbow(){const t=this.table.columnCount();this.graphColors=[];for(let e=0;e<t;e++){const n=1*e/t*360,s=DatamateColor.RGBFromHSB(n,1,1),i=DatamateColor.HEXFromRGB(s.red,s.green,s.blue);this.graphColors.push(i)}}clearAll(){this.table=null,this.isDataAvailable=!1,this.isLoaded&&(this.panelElement.querySelector("#table").innerHTML="",this.context.clearRect(0,0,this.chart.width,this.chart.height))}update(){this.isLoaded&&this.isDataAvailable&&this.isVisible&&this.shouldUpdate&&(this.updatePanelInfo(),this.updateHighlights(),this.updateGraph(),this.shouldUpdate=!0)}updatePanelTooltips(){const t=[];t.push(["#count-row","title","the number of rows without header row."]),t.push(["#count-col","title","the number of columns without header column."]),t.push(["#value-cell","title","current value of indicated by mouse."]),t.push(["#index-cell","title","current data indexes of indicated by mouse. <row:column>."]);for(let e in t){const n=t[e],s=n[0],i=n[1],a=n[2],l=this.panelElement.querySelector(s);l&&l.setAttribute(i,a)}}updatePanelInfo(){const t=[],e=this.table.columnDataCount(),n=this.table.rowDataCount();t.push(["#min input",this.table.min]),t.push(["#max input",this.table.max]),t.push(["#sum input",this.table.sum]),t.push(["#avg input",this.table.average]),t.push(["#count-row input",n]),t.push(["#count-col input",e]),t.push(["#index-cell input",this.highlightRowIndex+":"+this.highlightColIndex]);const s=this.table.dataAtDataIndexes(this.highlightColIndex,this.highlightRowIndex);s&&(t.push(["#value-cell input",s.value]),t.push(["#name-row input",s.row.name]),t.push(["#min-row input",s.row.min]),t.push(["#max-row input",s.row.max]),t.push(["#sum-row input",s.row.sum]),t.push(["#avg-row input",s.row.average]),t.push(["#name-col input",s.column.name]),t.push(["#min-col input",s.column.min]),t.push(["#max-col input",s.column.max]),t.push(["#sum-col input",s.column.sum]),t.push(["#avg-col input",s.column.average]));for(let e in t){const n=t[e],s=n[0],i=n[1],a=this.panelElement.querySelector(s);a&&(a.value=(isNaN(i),i))}}updateTable(t=null){null!=t&&(this.table=t),this.isDataAvailable=!0,this.min=this.table.min,this.max=this.table.max,this.updatePanelInfo();let e=this.panelElement.querySelector("#table");const n=window.document.createElement("table");n.cellSpacing="0px",n.cellPadding="0px";const s=this.table.formatTable(),i=window.document.createElement("thead"),a=s.get("indices");if(a){const t=window.document.createElement("tr");for(let e=0;e<a.length;e++){const n=a[e],s=window.document.createElement("th");s.innerHTML=n,s.addEventListener("mouseover",function(t){this.highlightRow(!1),this.shouldUpdate=!0}.bind(this)),t.appendChild(s)}i.appendChild(t)}const l=s.get("headers");if(l){const t=window.document.createElement("tr");for(let e=0;e<l.length;e++){const n=l[e],s=window.document.createElement("th");s.classList.add("row-header"),0==e&&this.table.headerColumnEnabled&&this.table.headerRowEnabled&&s.classList.add("corner-header"),s.innerHTML=n,s.addEventListener("mouseover",function(t){this.highlightRow(!1),this.shouldUpdate=!0}.bind(this)),t.appendChild(s)}i.appendChild(t)}n.appendChild(i);const o=window.document.createElement("tbody"),h=s.get("rows");for(let t=0;t<h.length;t++){const e=h[t],n=window.document.createElement("tr");for(let s=0;s<e.length;s++){const i=e[s],a=window.document.createElement(0==s&&this.table.headerColumnEnabled?"th":"td");0==s&&this.table.headerColumnEnabled&&a.classList.add("col-header"),a.innerHTML=i,a.rowIndex=t,a.colIndex=s+(0!=s&&this.table.headerColumnEnabled?-1:0),a.addEventListener("mousedown",function(t){this.highlightRowIndex=parseInt(t.currentTarget.rowIndex),this.highlightColIndex=parseInt(t.currentTarget.colIndex),this.plotter.moveToIndex(this.highlightRowIndex,e.length),this.table.cursor.move(this.highlightColIndex,this.highlightRowIndex),this.highlightRow(!1),this.highlightColumn(),this.shouldUpdate=!0}.bind(this)),a.addEventListener("mouseover",function(t){this.highlightRowIndex=parseInt(t.currentTarget.rowIndex),this.highlightColIndex=parseInt(t.currentTarget.colIndex),this.plotter.moveToIndex(this.highlightRowIndex,e.length),this.highlightRow(!1),this.highlightColumn(),this.shouldUpdate=!0}.bind(this)),n.appendChild(a)}o.appendChild(n)}n.appendChild(o),e.appendChild(n),this.updateGraph()}updateHighlights(){this.highlightColumn(!1),this.highlightRow(!1)}highlightColumn(t=!1){if(!this.isDataAvailable)return;const e=this.table.cursor.rowIndex()+1,n=this.table.cursor.columnIndex()+1,s=this.highlightColIndex+1,i=`\n\t\t\t#table tbody tr:nth-of-type(${e}) > td:nth-of-type(${n}) {\n\t\t\t\tborder: 1px solid red;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\t#table tbody tr:nth-of-type(${this.highlightRowIndex+1}) > td:nth-of-type(${s}) {\n\t\t\t\tborder: 1px solid orange;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t`;if(this.panelElement.querySelector("#highlight_style").innerHTML=i,t){const t=this.panelElement.querySelectorAll("thead th, thead td")[this.highlightColIndex],e=this.panelElement.querySelector("#table");e.offsetWidth,this.table.columnCount(),e.scrollLeft=t.offsetLeft}}highlightRow(t=!1){if(!this.isDataAvailable)return;const e=this.table.rowCount();if(this.highlightRowIndex<0||this.highlightRowIndex>=e)return;this.highlightTR&&this.highlightTR.removeAttribute("data-highlight");const n=this.panelElement.querySelectorAll("tbody tr");if(this.highlightTR=n[this.highlightRowIndex],this.highlightTR.setAttribute("data-highlight",!0),t){const t=this.panelElement.querySelector("#table"),n=this.panelElement.querySelector("thead tr").offsetHeight;t.scrollTop=this.highlightTR.offsetTop,this.highlightRowIndex<e-1&&(t.scrollTop=t.scrollTop-n)}}updateGraph(){this.isDataAvailable&&this.chart.draw(this.table,this.highlightRowIndex,this.highlightColIndex)}template(){return`\n\t\t<div id="panel">\n\t\t\t\x3c!-- template part begin --\x3e\n\t\t\t<style>\n\t\t\t\t/* @import url('https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300;400&display=swap');*/\n\t\t\t\t@import url('https://fonts.googleapis.com/css2?family=Barlow+Condensed:wght@100;200;300;400&display=swap');\n\n\t\t\t\t* {\n\t\t\t\t\tmargin: 0px;\n\t\t\t\t\tpadding: 0px;\n\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* ------------------------------ */\n\t\t\t\t/* panel */\n\t\t\t\t/* ------------------------------ */\n\t\t\t\t#panel, #controls, #contents {\n\t\t\t\t\tbackground-color: rgba(0,0,0, 0.75);\n\t\t\t\t}\n\t\t\t\t#panel {\n\t\t\t\t\tposition: fixed;\n\t\t\t\t\ttop: 0px;\n\t\t\t\t\tleft: 0px;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tfont-size: 13px;\n\t\t\t\t\tfont-weight: 400;\n\t\t\t\t\tfont-family: 'Barlow Condensed', 'Roboto Condensed', sans-serif;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* ------------------------------ */\n\t\t\t\t/* controls */\n\t\t\t\t/* ------------------------------ */\n\t\t\t\t#controls {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tpadding: 10px;\n\t\t\t\t\ttop: 0px;\n\t\t\t\t\tleft: 0px;\n\t\t\t\t\twidth: 200px;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tborder-right: 1px solid gray;\n\t\t\t\t}\n\t\t\t\t#title {\n\t\t\t\t\tfont-size: 1.2em;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tpadding: 20px 0px;\n\t\t\t\t}\n\n\t\t\t\t#controls hr {\n\t\t\t\t\tmargin: 4px 0px;\n\t\t\t\t\tborder: 0px solid gray;\n\t\t\t\t\tborder-bottom: 1px solid gray;\n\t\t\t\t}\n\n\t\t\t\t/* ------------------------------ */\n\t\t\t\t/* controls */\n\t\t\t\t/* ------------------------------ */\n\t\t\t\t#values,\n\t\t\t\t#values input {\n\t\t\t\t\tfont-size: 0.9em;\n\t\t\t\t}\n\t\t\t\t#values > div {\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t}\n\t\t\t\t#values > div > span {\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\twidth: 80px;\n\t\t\t\t}\n\t\t\t\t#values > div > span.status {\n\t\t\t\t\twidth: 20px;\n\t\t\t\t}\n\t\t\t\tinput {\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\tcolor: rgba(255,255,255,0.9);\n\t\t\t\t\tmargin: 0px 0px;\n\t\t\t\t\tpadding: 2px 0px;\n\t\t\t\t\twidth: 80px;\n\t\t\t\t\tborder: none;\n\t\t\t\t}\n\t\t\t\tinput[readonly] {\n\t\t\t\t\tbackground-color: rgba(255,255,255,0.0);\n\t\t\t\t}\n\t\t\t\t#name-row span,\n\t\t\t\t#name-col span,\n\t\t\t\t#value-cell span, \n\t\t\t\t#index-cell span {\n\t\t\t\t\tcolor: orange !important;\n\t\t\t\t} \n\n\t\t\t\t/* ------------------------------ */\n\t\t\t\t/* buttons */\n\t\t\t\t/* ------------------------------ */\n\t\t\t\t#buttons {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tbottom: 0px;\n\t\t\t\t\tleft: 0px;\n\t\t\t\t\tpadding: 20px 10px;\n\t\t\t\t}\n\t\t\t\t#buttons > div,\n\t\t\t\t#buttons > label {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tpadding: 10px 20px;\n\t\t\t\t\tmargin: 10px 0px;\n\t\t\t\t\tborder: 1px solid white;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tbackground-color: rgba(255,255,255,0.1);\n\t\t\t\t\tborder-radius: 6px;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t}\n\t\t\t\t#buttons > label {\n\t\t\t\t\tmargin-bottom: 30px;\n\t\t\t\t}\n\t\t\t\t#buttons > div:hover,\n\t\t\t\t#buttons > label:hover {\n\t\t\t\t\tbackground-color: rgba(255,255,255,0.4);\n\t\t\t\t}\n\t\t\t\t#buttons > input {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t/* ------------------------------ */\n\t\t\t\t/* contents */\n\t\t\t\t/* ------------------------------ */\n\t\t\t\t#contents {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0px;\n\t\t\t\t\tleft: 200px;\n\t\t\t\t\twidth: calc(100% - 200px);\n\t\t\t\t\theight: 100%;\n\t\t\t\t}\n\t\t\t\t#graph {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 50%;\n\t\t\t\t}\n\t\t\t\t#graph canvas {\n\t\t\t\t\tcursor: move;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tpadding: 20px 10px;\n\t\t\t\t}\n\n\t\t\t\t/* ------------------------------ */\n\t\t\t\t/* table */\n\t\t\t\t/* ------------------------------ */\n\t\t\t\t#table {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 50%;\n\t\t\t\t\tcolor: white;\n\t\t\t\t\toverflow: scroll;\n\t\t\t\t}\n\t\t\t\t#table table {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tborder: 1px solid gray;\n\t\t\t\t\tword-wrap: break-word;\n\t\t\t\t}\n\t\t\t\t#table tr {\n\t\t\t\t\tborder: 1px solid gray;\n\t\t\t\t}\n\t\t\t\t#table td, #table th {\n\t\t\t\t\twidth: 100px;\n\t\t\t\t\tmin-width: 100px;\n\t\t\t\t\tmax-width: 100px;\n\t\t\t\t\tpadding: 2px 10px;\n\t\t\t\t\tborder: 1px solid gray;\n\t\t\t\t}\n\t\t\t\tthead th, tbody th {\n\t\t\t\t\ttext-align: left;\n\t\t\t\t\tcolor: white;\n\t\t\t\t}\n\t\t\t\t#table td:hover {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t}\n\t\t\t\t#table th {\n\t\t\t\t\tcolor: rgba(255, 255, 255, 0.75);\n\t\t\t\t\tbackground: rgba(50, 50, 50, 0.75);\n\t\t\t\t}\n\t\t\t\t#table th:nth-of-type(1) {\n\t\t\t\t\tborder-right: 1px solid gray;\n\t\t\t\t}\n\n\t\t\t\t#table tr th.row-header {\n\t\t\t\t\ttext-align: left;\n\t\t\t\t\tposition: -webkit-sticky;\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 0px;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t}\n\t\t\t\t#table tr th.col-header {\n\t\t\t\t\tposition: -webkit-sticky;\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\tleft: 0px;\n\t\t\t\t}\n\t\t\t\t#table tr th.corner-header {\n\t\t\t\t\tposition: -webkit-sticky;\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\tleft: 0px;\n\t\t\t\t\ttop: 0px;\n\t\t\t\t\tz-index: 999;\n\t\t\t\t}\n\n\t\t\t\t[data-highlight=true] {\n\t\t\t\t\tbackground-color: rgba(255,200,0,0.2);\n\t\t\t\t}\n\t\t\t\t.cursor-position {\n\t\t\t\t}\n\n\t\t\t\t#values > #scale {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t</style>\n\t\t\t<style id="custom_style">\n\t\t\t/* the styles will be set by script. */\n\t\t\t</style>\n\t\t\t<style id="header_style">\n\t\t\t/* the styles will be set by script. */\n\t\t\t</style>\n\t\t\t<style id="highlight_style">\n\t\t\t/* the styles will be set by script. */\n\t\t\t</style>\n\n\t\t\t<div id="controls">\n\t\t\t\t<div id="title">datamate.js<p style="font-size:0.8em;">ver.${w.version}a</p></div>\n\t\t\t\t<div id=values>\n\t\t\t\t\t<div id="index-cell"><span>INDEXES</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<div id="name-row"><span>ROW</span><input type="text" value="Row Name" readonly></div>\n\t\t\t\t\t<div id="name-col"><span>COL</span><input type="text" value="Column Name" readonly></div>\n\t\t\t\t\t<div id="value-cell"><span>VALUE</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<hr>\n\t\t\t\t\t<div id="count-row"><span>ROW COUNT</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<div id="count-col""><span>COL COUNT</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<hr>\n\t\t\t\t\t<div id="min-row"><span>ROW MIN.</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<div id="max-row"><span>ROW MAX.</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<div id="sum-row"><span>ROW SUM</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<div id="avg-row"><span>ROW AVG.</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<hr>\n\t\t\t\t\t<div id="min-col"><span>COL MIN.</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<div id="max-col"><span>COL MAX.</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<div id="sum-col"><span>COL SUM</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<div id="avg-col"><span>COL AVG.</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<hr>\n\t\t\t\t\t<div id="min"><span>TOTAL MIN.</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<div id="max"><span>TOTAL MAX.</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<div id="sum"><span>TOTAL SUM</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<div id="avg"><span>TOTAL AVG.</span><input type="text" value="0" readonly></div>\n\t\t\t\t\t<div id="scale"><span>SCALE:</span><input type="range" min="1" max="10" step="0.01" value="1"><span class="status">1</span></div>\n\t\t\t\t</div>\n\t\t\t\t<div id="buttons">\n\t\t\t\t\t<input id="file-select" type="file" multiple='multiple' accept=".csv" />\n\t\t\t\t\t<label id="file-select-label" for="file-select">SELECT CSVs</label>\n\t\t\t\t\t<div id="transposebutton">TRANSPOSE</div>\n\t\t\t\t\t<div id="clearbutton">CLEAR ALL</div>\n\t\t\t\t\t<div id="closebox">CLOSE</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id="contents">\n\t\t\t\t<div id="graph"><canvas></canvas></div>\n\t\t\t\t<div id="table"></div>\n\t\t\t</div>\n\t\t</div>`}}class b{constructor(){this.x=0,this.y=0,this.width=0,this.height=0,this.mass=1,this.angle=0,this.velocity=0,this.rvelocity=0,this.friction=.99,this.rfriction=0,this.gravities=[],this.fields=[],this.engines=[],this.value=0,this.data=null,this.column=null,this.row=null}map(t,e){const n=Number(this.value);if(isNaN(n))return value;const s=this.data.column;return t==e?t:i.map(n,s.min,s.max,t,e)}force(t,e=0){this.rvelocity+=e,this.velocity+=t/this.mass}update(){this.angle+=this.rvelocity;const t=this.angle*(Math.PI/180);this.x+=Math.cos(t)*this.velocity,this.y+=Math.sin(t)*this.velocity,this.velocity*=this.friction}current(t=0,e=0){}offset(t=0,e=0,n=0){}}class w{static version="1.2.8.3";static COLUMN="COLUMN";static ROW="ROW";static ALL="ALL";static singleton=null;static sharedInstance(){return null==w.singleton&&(w.singleton=new w),w.singleton}static get isAvailable(){return w.sharedInstance().isAvailable}static uuid4(){return s.uuid4()}static set title(t){w.sharedInstance().title=t}static get title(){return w.sharedInstance().title}static make(t,e=null){w.setData(t,e)}static setData(t,e=null){w.sharedInstance().setData(t,e)}static setTitles(t,e=null){w.sharedInstance().setTitles(t,e)}static setHeaderEnables(t=!0,e=!0){w.sharedInstance().setHeaderEnables(t,e)}static value(t,e,n=0,s=0,i=w.COLUMN){return w.sharedInstance().getLerpValue(t,e,n,s,i)}static rate(t,e,n=0,s=1,i=w.COLUMN){return w.sharedInstance().getRate(t,e,n,s,i)}static data(t,e){return w.sharedInstance().getData(t,e)}static plot(){w.sharedInstance().showPanel()}static addFile(t){w.sharedInstance().addFile(t)}static load(t=null){w.sharedInstance().load(!1,t)}static loadAsync(t=null){w.sharedInstance().load(!0,t)}static set onLoad(t){w.sharedInstance().loadCompleteCallback=t}static map(t,e,n,s=w.COLUMN){return w.sharedInstance().map(t,e,n,s)}static get min(){return w.sharedInstance().min}static get max(){return w.sharedInstance().max}static get length(){return w.sharedInstance().length}static transpose(){return w.sharedInstance().transpose()}static name(t,e=w.ROW){const n=w.sharedInstance();return w.ROW?n.rowNameAtIndex(t):n.columnNameAtIndex(t)}static columnCount(){return w.sharedInstance().columnCount()}static columnName(t){return w.sharedInstance().columnNameAtIndex(t)}static column(t){return w.sharedInstance().column(t)}static rowCount(){return w.sharedInstance().rowCount()}static rowName(t){return w.sharedInstance().rowNameAtIndex(t)}static row(t){return w.sharedInstance().row(t)}static makeAreas(t,e,n,s,i=1,a=1){w.sharedInstance().makeAreas(t,e,n,s,i,a)}static bindAreas(t){w.sharedInstance().bindAreas(t)}static area(t){return w.sharedInstance().area(t)}static origin(){w.sharedInstance().origin()}static move(t,e){w.sharedInstance().move(t,e)}static right(t=1){w.sharedInstance().right(t)}static left(t=1){w.sharedInstance().left(t)}static up(t=1){w.sharedInstance().up(t)}static down(t=1){w.sharedInstance().down(t)}static focusX(t=0,e=!1){return w.sharedInstance().focusX(t,e)}static focusY(t=0,e=!1){return w.sharedInstance().focusY(t,e)}static play(t=1,e=0){w.sharedInstance().play(t,e)}static stop(){w.sharedInstance().stop()}static loop(t=!1,e=!1){w.sharedInstance().loop(t,e)}static makeNodes(t){w.sharedInstance().makeNodes(t)}static bindNodes(t){}static layoutNodes(t){}static node(t){return w.sharedInstance().node(t)}constructor(){console.log("Datamate.js: version:",w.version),this.fileLoader=new n,this.rootArea=new u,this.areas=new Object,this.table=new d,this.isAvailable=!1,this.plotterRange=[0,100],this.title="Datamate.",this.panel=new g,this.panel.fileSelectionCallback=this.fileSelectionCallback.bind(this),this.panel.transposeSelectionCallback=this.transposeSelectionCallback.bind(this),this.keyControlEnabled=!0,window.addEventListener("keydown",function(t){if(!this.keyControlEnabled)return;80==t.keyCode&&t.shiftKey&&(this.panel.isVisible?this.hidePanel():this.showPanel());let e=1;t.shiftKey&&(e=.1),"ArrowRight"==t.key&&this.table.cursor.right(e),"ArrowLeft"==t.key&&this.table.cursor.left(e),"ArrowUp"==t.key&&this.table.cursor.up(e),"ArrowDown"==t.key&&this.table.cursor.down(e)," "==t.key&&this.table.cursor.toggle()}.bind(this))}setData(t,e=null){let n=Array.isArray(t)?t:[t];Array.isArray(e)&&(n=n.concat(e));const s=n[0].split(".");"csv"==s[s.length-1]?this.load(!1,n):this.table.addRowValues(n)}setTitles(t,e=null){let n=Array.isArray(t)?t:[t];Array.isArray(e)&&(n=n.concat(e)),this.table.setHeaderNames(n)}setHeaderEnables(t=!0,e=!0){this.table.setHeaderEnables(t,e)}transpose(){this.table.transpose()}transposeSelectionCallback(){this.table.transpose(),this.showPanel()}set loadCompleteCallback(t){this.fileLoader.callback=t}addFile(t){this.fileLoader.addFilePath(t)}addFiles(t){for(let e=0;e<t.length;e++)this.fileLoader.addFilePath(t[e])}async load(t=!0,e=null){if(("string"==typeof e||e instanceof String)&&this.addFile(e),Array.isArray(e)&&this.addFiles(e),0!=this.fileLoader.count()){t?await this.fileLoader.load():this.fileLoader.loadSync(),this.table.clear();for(let t=0;t<this.fileLoader.dataset.length;t++){const e=this.fileLoader.dataset[t],n=new d;n.setHeaderEnables(this.table.headerRowEnabled,this.table.headerColumnEnabled),n.parseCSV(e),this.table.merge(n)}this.isAvailable=!0,this.panel.clearAll(),this.panel.isLoaded&&this.panel.updateTable(this.table),this.callback&&this.callback()}}fileSelectionCallback(t){this.fileLoader.clear();for(let e=0;e<t.length;e++)this.fileLoader.addFilePath(t[e]);this.load(!1)}makeAreas(t,e,n,s,i=1,a=1){this.rootArea=new u(t,e,n,s,i,a),this.isBoundArea=!1,this.areas=new Object;let l=i*a;for(let t=0;t<l;t++){let e=Math.floor(t%i),n=Math.floor(t/i);const s=this.rootArea.block(e,n,t);this.areas[t]=s}}bindAreas(t){this.areas=new Object;for(let e=0;e<t.length;e++){const n=t[e],s=Math.floor(e%this.rootArea.xBlocks),i=Math.floor(e/this.rootArea.xBlocks),a=this.rootArea.block(s,i,n);this.areas[n]=a}}area(t){return this.areas[t]}openPanel(){this.panel.min=this.plotterRange[0],this.panel.max=this.plotterRange[1],this.panel.scale=1,this.panel.load()}closePanel(){this.panel.unload()}showPanel(){this.panel.clearAll(),this.table&&this.panel.updateTable(this.table),this.panel.show()}hidePanel(){this.panel.hide()}foreground(t){this.panel.styles.color=t}background(t){this.panel.styles.background=t}graphColors(t){this.panel.graphColors=t}range(t,e){this.panel.min=t,this.panel.max=e}scalable(t,e){this.panel.scalableMin=t,this.panel.scalableMax=e}reset(){this.table.reset()}move(t,e){this.table.move(t,e)}right(t=1){this.table.right(t)}left(t=1){this.table.left(t)}up(t=1){this.table.up(t)}down(t=1){this.table.down(t)}focusX(t=0,e=!1){return this.table.focusX(t,e)}focusY(t=0,e=!1){return this.table.focusY(t,e)}play(t=1,e=0){this.table.play(t,e)}stop(){this.table.stop()}loop(t=!1,e=!1){this.table.cursor.transitionX.loopEnabled=t,this.table.cursor.transitionY.loopEnabled=e}current(t,e=0,n=0,s=!1){return this.transition.current(t,e,n,s)}currentIndex(){return this.transition.currentIndex()}map(t,e,n,s=null){const a=this.table.getColumn(s),l=null!==a?a.min:this.min,o=null!==a?a.max:this.max;return i.map(t,l,o,e,n)}get min(){return this.table.min}get max(){return this.table.max}get length(){return this.table.rowCount()}column(t){return this.table.column(t)}columnNameAtIndex(t){return this.table.columnDataHeaderNameAtIndex(t)}columnCount(){return this.table.columnDataCount()}row(t){return this.table.row(t)}rowNameAtIndex(t){return this.table.rowDataHeaderNameAtIndex(t)}rowCount(){return this.table.rowDataCount()}headerEnables(t=!0,e=!0){null==this.table&&(this.table=new d),this.table.setHeaderEnabled(t,e)}addRowValues(t){null==this.table&&(this.table=new d(!0,!0)),this.table.addRowValues(t)}setValues(t,e){null==this.table&&(this.table=new d(!0,!1)),this.table.setValues(t,e)}getData(t,e){const n="string"==typeof t?this.table.indexOfDataRowName(t):parseInt(t),s="string"==typeof e?this.table.indexOfDataColumnName(e):parseInt(e);return isNaN(n)||isNaN(s)?null:this.table.dataAtDataIndexes(s,n)}getValue(t=null,e=null,n=0,s=0,a=w.COLUMN){const l=this.getData(t,e);if(null==l)return;let o=l.value;if(n!=s){const t=a==w.COLUMN?l.row.min:l.column.min,e=a==w.COLUMN?l.row.max:l.column.max;o=i.map(o,t,e,n,s)}return o}getLerpValue(t=null,e=null,n=0,s=0,a=w.COLUMN){let l=NaN,o=NaN;"string"!=typeof t&&(l=this.table.headerRowEnabled?parseFloat(t)+1:parseFloat(t)),"string"==typeof t&&(l=this.table.indexOfRowName(t)),"string"!=typeof e&&(o=this.table.headerColumnEnabled?parseFloat(e)+1:parseFloat(e)),"string"==typeof e&&(o=this.table.indexOfColumnName(e));let h=this.table.lerpValueAtIndexees(o,l);if("string"==typeof h)return h;if(n!=s){const l=this.getData(t,e);if(null==l)return h;const o=a==w.COLUMN?l.row.min:l.column.min,r=a==w.COLUMN?l.row.max:l.column.max;h=i.map(h,o,r,n,s)}return h}getRate(t,e,n=0,s=1,a=w.ROW){const l=this.getData(e,t);if(null===l)return;let o=a==w.COLUMN?l.value/l.row.sum:l.value/l.column.sum;return n!=s&&(o=i.map(o,0,1,n,s)),o}transpose(){this.table.transpose()}makeNodes(t){this.nodes=[];for(let e=0;e<t;e++)this.nodes.push(new b)}node(t){return t<this.nodes.length?this.nodes[t]:null}width(t){return this.table.getColumn(t).area().width}height(t){return this.table.getColumn(t).area().height}center(t){const e=this.table.getColumn(t).area();return{x:i.map(.5,0,1,e.x,e.x+e.width),y:i.map(.5,0,1,e.y,e.y+e.height)}}getNode(t=null,e=null){return this.table.getNode(t,e)}}return e.default})()}));